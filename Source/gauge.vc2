*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="gauge.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS gauge AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: drawgauge		&& Draws the gauge image
		*m: getcolor		&& Convert a VFP RGB value to a .NET RGB value
		*p: cdialtext		&& The text for the dial
		*p: cdialtextfontname		&& The font for the dial text
		*p: cerrormessage		&& The text of any error that occurs
		*p: cformat		&& The format for the labels in .NET syntax
		*p: cimage		&& The gauge image
		*p: clabelfontname		&& The font for the labels
		*p: ladjustlabelsize		&& .T. to adjust the label size based on the gauge size, .F. to use the size specified in nLabelFontSize
		*p: ldialtextfontbold		&& .T. if the dial text is bold
		*p: ldialtextfontitalic		&& .T. if the dial text is italics
		*p: ldisplaydigitalvalue		&& .T. to display the value in a digital display
		*p: llabelfontbold		&& .T. if the label text is bold
		*p: llabelfontitalic		&& .T. if the label text is italics
		*p: lshowgoalmarker		&& .T. to display the goal marker
		*p: lvaluesaspercentages		&& .T. to use percentages for values, .F. to use amounts for values
		*p: nbackcolor		&& The background color or the starting color for a background gradient
		*p: nbackcolor2		&& The end color for a background gradient; if it's the same as nBackColor, there is no gradient
		*p: nbackcoloralpha		&& The alpha for the background color
		*p: nbackgradientmode		&& The mode for a background gradient: 0 = left to right, 1 = top to bottom, 2 = from top left, 3 = from top right
		*p: nband1color		&& The color for band 1
		*p: nband1end		&& The ending position for band 1
		*p: nband2color		&& The color for band 2
		*p: nband2end		&& The ending position for band 2
		*p: nband3color		&& The color for band 3
		*p: ndialalpha		&& The alpha for the dial color
		*p: ndialcolor		&& The color to use for the dial
		*p: ndialtextcolor		&& The color for the dial text
		*p: ndialtextfontsize		&& The font size for the dial text
		*p: ndigitscolor		&& The color for digital digits
		*p: nglossiness		&& The glossiness value (0 - 100)
		*p: ngoalmarkercolor		&& The color for the goal marker
		*p: ngoalposition		&& The position where the goal value appears on the gauge
		*p: nlabelcolor		&& The color to use for labels
		*p: nlabeldistance		&& The distance between labels and major tick marks
		*p: nlabelfactor		&& The factor to use for labels: 1, 1000, 10000, etc.
		*p: nlabelfontsize		&& The font size for the labels
		*p: nmajortickcolor		&& The color of major tick marks
		*p: nmajortickcount		&& The number of major ticks
		*p: nmaxvalue		&& The goal value for the gauge
		*p: nminortickcolor		&& The color of minor tick marks
		*p: nminortickcount		&& The number of minor ticks
		*p: nminvalue		&& The minimum value
		*p: nsize		&& The height and width of the gauge (it's a square so they're the same)
		*p: nvalue		&& The current value for the gauge
		*p: obridge		&& A reference to a wwDotNetBridge object
		*p: ogauge		&& A reference to a .NET GaugeControl object
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	cdialtext = 		&& The text for the dial
	cdialtextfontname = Arial		&& The font for the dial text
	cerrormessage = 		&& The text of any error that occurs
	cformat = 		&& The format for the labels in .NET syntax
	cimage = 		&& The gauge image
	clabelfontname = Arial		&& The font for the labels
	ladjustlabelsize = .T.		&& .T. to adjust the label size based on the gauge size, .F. to use the size specified in nLabelFontSize
	ldialtextfontbold = .F.		&& .T. if the dial text is bold
	ldialtextfontitalic = .F.		&& .T. if the dial text is italics
	ldisplaydigitalvalue = .T.		&& .T. to display the value in a digital display
	llabelfontbold = .F.		&& .T. if the label text is bold
	llabelfontitalic = .F.		&& .T. if the label text is italics
	lshowgoalmarker = .F.		&& .T. to display the goal marker
	lvaluesaspercentages = .T.		&& .T. to use percentages for values, .F. to use amounts for values
	Name = "gauge"
	nbackcolor = (rgb(255, 255, 255))		&& The background color or the starting color for a background gradient
	nbackcolor2 = (rgb(255, 255, 255))		&& The end color for a background gradient; if it's the same as nBackColor, there is no gradient
	nbackcoloralpha = 255		&& The alpha for the background color
	nbackgradientmode = 0		&& The mode for a background gradient: 0 = left to right, 1 = top to bottom, 2 = from top left, 3 = from top right
	nband1color = (rgb(240, 240, 240))		&& The color for band 1
	nband1end = 35		&& The ending position for band 1
	nband2color = (rgb(255, 255, 160))		&& The color for band 2
	nband2end = 70		&& The ending position for band 2
	nband3color = (rgb(255, 160, 160))		&& The color for band 3
	ndialalpha = 120		&& The alpha for the dial color
	ndialcolor = (rgb(230, 230, 250))		&& The color to use for the dial
	ndialtextcolor = 0		&& The color for the dial text
	ndialtextfontsize = 10		&& The font size for the dial text
	ndigitscolor = 0		&& The color for digital digits
	nglossiness = 75		&& The glossiness value (0 - 100)
	ngoalmarkercolor = (rgb(128, 0, 128))		&& The color for the goal marker
	ngoalposition = 100		&& The position where the goal value appears on the gauge
	nlabelcolor = 0		&& The color to use for labels
	nlabeldistance = 0		&& The distance between labels and major tick marks
	nlabelfactor = 1		&& The factor to use for labels: 1, 1000, 10000, etc.
	nlabelfontsize = 10		&& The font size for the labels
	nmajortickcolor = 0		&& The color of major tick marks
	nmajortickcount = 10		&& The number of major ticks
	nmaxvalue = 100		&& The goal value for the gauge
	nminortickcolor = 0		&& The color of minor tick marks
	nminortickcount = 3		&& The number of minor ticks
	nminvalue = 0		&& The minimum value
	nsize = 200		&& The height and width of the gauge (it's a square so they're the same)
	nvalue = 0		&& The current value for the gauge
	obridge = .NULL.		&& A reference to a wwDotNetBridge object
	ogauge = .NULL.		&& A reference to a .NET GaugeControl object
	Width = 17
	_memberdata = <VFPData>
		<memberdata name="drawgauge" display="DrawGauge"/>
		<memberdata name="ogauge" display="oGauge"/>
		<memberdata name="getcolor" display="GetColor"/>
		<memberdata name="cerrormessage" display="cErrorMessage"/>
		<memberdata name="obridge" display="oBridge"/>
		<memberdata name="nband1end" display="nBand1End"/>
		<memberdata name="nband2end" display="nBand2End"/>
		<memberdata name="nmaxvalue" display="nMaxValue"/>
		<memberdata name="lvaluesaspercentages" display="lValuesAsPercentages"/>
		<memberdata name="ladjustlabelsize" display="lAdjustLabelSize"/>
		<memberdata name="nbackcolor" display="nBackColor"/>
		<memberdata name="nbackcoloralpha" display="nBackColorAlpha"/>
		<memberdata name="nbackcolor2" display="nBackColor2"/>
		<memberdata name="nbackgradientmode" display="nBackGradientMode"/>
		<memberdata name="nband1color" display="nBand1Color"/>
		<memberdata name="nband2color" display="nBand2Color"/>
		<memberdata name="nband3color" display="nBand3Color"/>
		<memberdata name="ndialcolor" display="nDialColor"/>
		<memberdata name="ndialalpha" display="nDialAlpha"/>
		<memberdata name="cdialtext" display="cDialText"/>
		<memberdata name="ndialtextcolor" display="nDialTextColor"/>
		<memberdata name="cdialtextfontname" display="cDialTextFontName"/>
		<memberdata name="ndialtextfontsize" display="nDialTextFontSize"/>
		<memberdata name="ndigitscolor" display="nDigitsColor"/>
		<memberdata name="ldisplaydigitalvalue" display="lDisplayDigitalValue"/>
		<memberdata name="clabelfontname" display="cLabelFontName"/>
		<memberdata name="nlabelfontsize" display="nLabelFontSize"/>
		<memberdata name="cformat" display="cFormat"/>
		<memberdata name="nglossiness" display="nGlossiness"/>
		<memberdata name="nsize" display="nSize"/>
		<memberdata name="nlabelcolor" display="nLabelColor"/>
		<memberdata name="nlabeldistance" display="nLabelDistance"/>
		<memberdata name="nlabelfactor" display="nLabelFactor"/>
		<memberdata name="nmajortickcolor" display="nMajorTickColor"/>
		<memberdata name="nmajortickcount" display="nMajorTickCount"/>
		<memberdata name="nminortickcolor" display="nMinorTickColor"/>
		<memberdata name="nminortickcount" display="nMinorTickCount"/>
		<memberdata name="ngoalposition" display="nGoalPosition"/>
		<memberdata name="nvalue" display="nValue"/>
		<memberdata name="cimage" display="cImage"/>
		<memberdata name="ldialtextfontbold" display="lDialTextFontBold"/>
		<memberdata name="ldialtextfontitalic" display="lDialTextFontItalic"/>
		<memberdata name="llabelfontbold" display="lLabelFontBold"/>
		<memberdata name="llabelfontitalic" display="lLabelFontItalic"/>
		<memberdata name="nminvalue" display="nMinValue"/>
		<memberdata name="lshowgoalmarker" display="lShowGoalMarker"/>
		<memberdata name="ngoalmarkercolor" display="nGoalMarkerColor"/>
		</VFPData>		&& XML Metadata for customizable properties
	
	PROCEDURE drawgauge		&& Draws the gauge image
		local lnEnd1, ;
			lnEnd2, ;
			lnMaxValue
		with This
		
		* Get the band positions.
		
			lnEnd1     = .nBand1End
			lnEnd2     = .nBand2End
			lnMaxValue = iif(.nMaxValue > .nMinValue, .nMaxValue/100, .nMinValue/100)
		
		* If the band values were entered as amounts, convert to percentages.
		
			do case
				case .lValuesAsPercentages
				case .nMaxValue = 100
					&& max value hasn't been set
					lnEnd1 = 35
					lnEnd2 = 70
				otherwise
					lnEnd1 = int(lnEnd1/lnMaxValue)
					lnEnd2 = int(lnEnd2/lnMaxValue)
			endcase
		endwith
		with This.oGauge
		
		* Set the appearance properties.
		
			.AdjustLabelSize     = This.lAdjustLabelSize
			.BackColor           = This.GetColor(This.nBackColor, ;
				This.nBackColorAlpha)
			.BackColor2          = This.GetColor(This.nBackColor2, ;
				This.nBackColorAlpha)
			.BackGradientMode    = This.nBackGradientMode
			.Band1Color          = This.GetColor(This.nBand1Color)
			.Band1End            = lnEnd1
			.Band2Color          = This.GetColor(This.nBand2Color)
			.Band2End            = lnEnd2
			.Band3Color          = This.GetColor(This.nBand3Color)
			.DialColor           = This.GetColor(This.nDialColor, ;
				This.nDialAlpha)
			.DialText            = This.cDialText
			.DialTextColor       = This.GetColor(This.nDialTextColor)
			.DialTextFontName    = This.cDialTextFontName
			.DialTextFontSize    = This.nDialTextFontSize
			.DialTextFontBold    = This.lDialTextFontBold
			.DialTextFontItalic  = This.lDialTextFontItalic
			.DigitsColor         = This.GetColor(This.nDigitsColor)
			.DisplayDigitalValue = This.lDisplayDigitalValue
			.LabelFontBold       = This.lLabelFontBold
			.LabelFontItalic     = This.lLabelFontItalic
			.LabelFontName       = This.cLabelFontName
			.LabelFontSize       = This.nLabelFontSize
			.Format              = This.cFormat
			.GoalMarkerColor     = This.GetColor(This.nGoalMarkerColor)
			.Glossiness          = This.nGlossiness
			.Height              = This.nSize
			.LabelColor          = This.GetColor(This.nLabelColor)
			.LabelDistance       = This.nLabelDistance
			.LabelFactor         = This.nLabelFactor
			.MajorTickColor      = This.GetColor(This.nMajorTickColor)
			.MajorTicks          = This.nMajorTickCount
			.MinorTickColor      = This.GetColor(This.nMinorTickColor)
			.MinorTicks          = This.nMinorTickCount
			.ShowGoalMarker      = This.lShowGoalMarker
		
		* Set the value properties.
		
			.MaxValue     = This.nMaxValue
			.GoalPosition = This.nGoalPosition
			.MinValue     = This.nMinValue
			.Value        = This.nValue
		
		* Draw the image and set our cImage property to the image bytes.
		
			This.cImage = .DrawGauge()
		endwith
		
	ENDPROC

	PROCEDURE getcolor		&& Convert a VFP RGB value to a .NET RGB value
		lparameters tnColor, ;
			tnAlpha
		local lnRed, ;
			lnGreen, ;
			lnBlue, ;
			lnAlpha
		lnRed   = mod(tnColor, 256)
		lnGreen = mod(bitrshift(tnColor, 8), 256)
		lnBlue  = mod(bitrshift(tnColor, 16), 256)
		lnAlpha = iif(vartype(tnAlpha) = 'N', tnAlpha, 255)
		return rgb(lnBlue, lnGreen, lnRed) + bitlshift(lnAlpha, 24)
		
	ENDPROC

	PROCEDURE Init
		lparameters toBridge
		
		* If we were passed a wwDotNetBridge object, use it. Otherwise, create one.
		
		if vartype(toBridge) = 'O'
			This.oBridge = toBridge
		else
			This.oBridge = newobject('wwDotNetBridge', 'wwDotNetBridge.prg', '', 'V2')
		endif vartype(toBridge) = 'O'
		
		* Load the Gauge assembly: it must be in the current directory or path.
		
		if not This.oBridge.LoadAssembly('Gauge.dll')
			This.cErrorMessage = 'Gauge.dll could not be loaded: ' + ;
				This.oBridge.cErrorMsg
			return
		endif not This.oBridge.LoadAssembly('Gauge.dll')
		
		* Instantiate a GaugeControl object.
		
		This.oGauge = This.oBridge.CreateInstance('Gauge.GaugeControl')
		
		* Set cFormat to a default we can't set in the Properties window.
		
		This.cFormat = '{0:#,##0}'
		
	ENDPROC

ENDDEFINE
